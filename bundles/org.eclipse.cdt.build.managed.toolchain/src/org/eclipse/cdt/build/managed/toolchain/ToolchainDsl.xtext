/********************************************************************************
 * Copyright (c) 2019 Renesas Electronics Europe Ltd and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/
grammar org.eclipse.cdt.build.managed.toolchain.ToolchainDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate toolchainDsl "http://www.eclipse.org/cdt/build/managed/toolchain/ToolchainDsl"

ToolchainFile hidden(WS, ML_COMMENT, SL_COMMENT):
	(includes+=Include)*
	(toolchain=Toolchain)
;

Include:
	'include' importURI=STRING
;


PropertyHolder:
    Toolchain | Option | Tool;

@Exported
Toolchain hidden(WS, ML_COMMENT, SL_COMMENT):
	{Toolchain}
	'toolchain' name=ID ('extends' parent=[Toolchain])? '{'
	(properties+=Property*) 
	(options+=Option)*
	(tools+=Tool)*
	'}';
@Exported
Option hidden(WS, ML_COMMENT, SL_COMMENT):
	{Option}
	'option' name=ID 'as' (type=ID) '{'
	(properties+=Property*)
	'}'
;

OptionInherit:
	'inherit' option=[Option|QualifiedName] '{'
	(properties+=Property*)
	'}'
;

@Exported
Tool hidden(WS, ML_COMMENT, SL_COMMENT):
	{Tool}
	'tool' name=ID ('extends' parent=[Tool])? '{'
	(properties+=Property*)
	(options+=Option* & inheritedOptions+=OptionInherit*)
	'}'
;

Property:
	StringProperty|BoolProperty|IdProperty|IntProperty
;

StringProperty returns Property:
	name= ID ':' value= StringLiteral
;
BoolProperty returns Property:
	name= ID ':' value= BoolLiteral
;
IdProperty returns Property:
	name= ID ':' value= IdLiteral
;
IntProperty returns Property:
	(name=ID) ':' value= IntLiteral
;

IntLiteral: value = INT;
BoolLiteral: value = BOOL;
IdLiteral: value = ID;
StringLiteral: value = STRING;


NamespaceDeclaration:
	'namespace' name=QualifiedName;

QualifiedName:
	ID ('.' ID)*;

//Import:
//	'import' importedNamespace=QualifiedNameWithWildcard;

//QualifiedNameWithWildcard:
//	QualifiedName '.*'?;

terminal BOOL returns ecore::EBoolean: 'true' | 'false';
